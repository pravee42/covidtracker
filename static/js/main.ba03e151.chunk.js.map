{"version":3,"sources":["components/chartCountry.jsx","components/ChartCountryComponentDeaths.jsx","components/ChartCountryComponentRecovered.jsx","components/Country.jsx","components/chart.jsx","components/Dailycases.jsx","components/logoimage.jpg","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["options","global","line","borderColor","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","casesType","chartData","date","cases","newDataPoint","x","y","push","ChartCountryComponent","countryName","useState","setData","useEffect","a","fetch","then","responce","json","country","timeline","console","log","fetchData","length","datasets","backgroundColor","ChartCountryComponentDeaths","Country","props","getData","axios","get","state","result","setState","catch","error","alert","changeCountry","e","target","name","className","Header","as","this","onChange","id","onClick","active","todayCases","deaths","todayDeaths","ChartCountryComponentRecovered","Component","ChartComponent","changeCase","todayRecovered","recovered","Home","src","alt","frameborder","logoimage","srcset","href","App","to","path","Dailycases","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba03e151.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './chartCountrystyle.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponent({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    // const [countrydata, setCountrydata] = useState(countryName);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=100`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { country, timeline, timeline: { cases } } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    console.log(timeline)\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#d2b21694\",\r\n                                    borderColor: \"#ff9800\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponent","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './chartCountrystyle.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponentDeaths({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    // const [countrydata, setCountrydata] = useState(countryName);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=100`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { country, timeline, timeline: { cases } } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    console.log(timeline)\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#e3feb9\",\r\n                                    borderColor: \"#0a6b35\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponentDeaths","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './chartCountrystyle.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponent({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    // const [countrydata, setCountrydata] = useState(countryName);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=100`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { country, timeline, timeline: { cases } } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    console.log(timeline)\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#f5c6fc\",\r\n                                    borderColor: \"#930ba7\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponent","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './style.css'\r\nimport { Container, Header, Input, Button, Icon } from 'semantic-ui-react'\r\nimport ChartCountryComponent from './chartCountry'\r\nimport ChartCountryComponentDeaths from './ChartCountryComponentDeaths'\r\nimport ChartCountryComponentRecovered from './ChartCountryComponentRecovered'\r\n\r\nclass Country extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            country: '',\r\n            countryName: 'India',\r\n            casesType: 'cases',\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(`https://disease.sh/v3/covid-19/countries/${this.state.country}`).then(result => {\r\n            const data = result.data\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                this.setState({ countryName: this.state.country }, () => { console.log(this.state.countryName) })\r\n            })\r\n        })\r\n            .catch(error => {\r\n                alert(\"Enter a Valid Country Name\")\r\n                this.setState({\r\n                    country: ''\r\n                })\r\n            })\r\n    }\r\n\r\n    changeCountry = (e) => {\r\n        this.setState({\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"countryComponent\">\r\n                <div className=\"country-conatiner\">\r\n                    <div className=\"search-container\">\r\n                        <Header as='h2'>Type Country Name</Header>\r\n                        <input className=\"search-textbox\" value={this.state.country} onChange={this.changeCountry} type=\"text\" name=\"country\" id=\"\" />\r\n                        <div className=\"button-values\">\r\n                            <button className=\"search-button\" onClick={this.getData} >\r\n                                Search\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"country-details\">\r\n                        <div className=\"active-cases\">\r\n                            Active Cases: {this.state.data.active}\r\n                        </div>\r\n                        <div className=\"today-cases\">\r\n                            Today's Cases: {this.state.data.todayCases}\r\n                        </div>\r\n                        <div className=\"death-cases\">\r\n                            Death: {this.state.data.deaths}\r\n                        </div>\r\n                        <div className=\"today-death-cases\">\r\n                            Today Deaths: {this.state.data.todayDeaths}\r\n                        </div>\r\n                        <div className=\"country-name\">\r\n                            {this.state.data.country}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapschange\">\r\n                    <h2>Cases</h2>\r\n                    <ChartCountryComponent casesType='cases' countryName={this.state.countryName} />\r\n                    <div className=\"countryNameComponent\">\r\n                        <h2>Country: {this.state.countryName}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapdata\">\r\n                    <div className=\"deaths\">\r\n                        <h2>Death</h2>\r\n                        <ChartCountryComponentDeaths casesType='deaths' countryName={this.state.countryName} />\r\n                    </div>\r\n                    <div className=\"Recovered\">\r\n                        <h2>Recovered</h2>\r\n                        <ChartCountryComponentRecovered casesType='recovered' countryName={this.state.countryName} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Country;\r\n\r\n","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './style.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 2,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartComponent({ casesType }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#d2b21694\",\r\n                                    borderColor: \"#ff9800\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartComponent","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './dailycasescomponent.css'\r\nimport { Container, Header, Input, Button, Icon } from 'semantic-ui-react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n// import Chart from 'chart.js';\r\nimport ChartComponent from './chart'\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%'\r\n};\r\n\r\nclass Country extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            country: '',\r\n            casesType: 'cases',\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(`https://disease.sh/v3/covid-19/all/`).then(result => {\r\n            const data = result.data\r\n            this.setState({\r\n                data\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    changeCase = (e) => {\r\n        this.setState({\r\n            casesType: [e.target.name]\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"daily-cases-component\">\r\n                <div className=\"daily-cases-conatiner\">\r\n                    <div className=\"activecases\">\r\n                        <h2>Active Cases Cases</h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"noneupdate\">+{this.state.data.todayCases}</p>\r\n                            <h3 className=\"activeCases1\">{this.state.data.active}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps1\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"confrimed\">\r\n                        <h2>Total Confrimed  Cases</h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"liveUpdate\">+{this.state.data.todayCases}</p>\r\n                            <h3 className=\"activeCases\">{this.state.data.cases}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps\" name=\"cases\" onClick={this.changeCase} type=\"submit\">Show Chart Data</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"deathcases\">\r\n                        <h2>Death Cases</h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"liveUpdate\">+{this.state.data.todayDeaths}</p>\r\n                            <h3 className=\"activeCases\">{this.state.data.deaths}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps\" name=\"recovered\" onClick={this.changeCase} type=\"submit\">Show Chart Data</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"recovered\">\r\n                        <h2>Recovered Cases</h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"liveUpdate\">+{this.state.data.todayRecovered}</p>\r\n                            <h3 className=\"activeCases\">{this.state.data.recovered}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps\" name=\"deaths\" onClick={this.changeCase} type=\"submit\">Show Chart Data</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapschange\">\r\n                    <ChartComponent casesType={this.state.casesType} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Country;\r\n\r\n","export default __webpack_public_path__ + \"static/media/logoimage.5a0189a8.jpg\";","import React, { Component } from 'react'\r\nimport './Homecss.css'\r\nimport logoimage from './logoimage.jpg'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"tab1\">\r\n                    <div className=\"Home\">\r\n                        <div className=\"appinfo\">\r\n                            <h1 className=\"Apptitle\">COVID-19 Tracker App</h1>\r\n                            <p className=\"content\">This app is used to track corona virus of worldwide or specific countries. <br />\r\n                    By using the statictical data we can analyze the historical data with the graphical view for the past 100 days\r\n                    </p>\r\n                        </div>\r\n\r\n                        <div className=\"logo-container\">\r\n                            <img className=\"logo\" src=\"https://www.world-heart-federation.org/wp-content/uploads/WEB-_PREVENT-_MEDICAL_650.gif\" alt=\"none\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"avideo\">\r\n                        {/* https://covid19.info.gov.pg/wp-content/uploads/2020/03/WHO-English.mp4 */}\r\n                        <iframe className=\"awarnessVideo\" src=\"https://covid19.info.gov.pg/wp-content/uploads/2020/03/WHO-English.mp4\" frameborder=\"0\"></iframe>\r\n                        <h2>AwarnessVideo</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"div\">\r\n                    <img className=\"image\" src={logoimage} alt=\"image Logo\" srcset=\"\" />\r\n                    <div className=\"authorinfromation\">\r\n                        <div className=\"companyname\">\r\n                            <p>Company</p><h1>ABIPRAVI</h1>\r\n                        </div>\r\n                        <div className=\"authordetails\">\r\n                            <p>This Website was Created By Praveen Kumar</p>\r\n                            <p className=\"sdata-corona\">This Website will be helpfull to track corona's Statistical data from past 100days.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"headermedia\">\r\n                        <h1>Follow Us on</h1>\r\n                        <div className=\"socialmedia\">\r\n                            <a href=\"https://www.instagram.com/praveenkumar_abipravi/\">Instagram</a>\r\n                            <a href=\"https://github.com/pravee42\">Github</a>\r\n                            <a href=\"https://www.youtube.com/channel/UCTMAfI1rkf94YQGNmZwFT7Q\">Youtube</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Country from './components/Country';\nimport Dailycases from './components/Dailycases';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"navbar\">\n          <nav>\n            <ul>\n              <li>\n                <Link className=\"td\" to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link className=\"td\" to=\"/country\">Search By Country</Link>\n              </li>\n              <li>\n                <Link className=\"td\" to=\"/dailycases\">Daily Cases</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div className=\"main-body\">\n          <Switch >\n            <Route path=\"/country\">\n              <Country />\n            </Route>\n            <Route path=\"/dailycases\">\n              <Dailycases />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}